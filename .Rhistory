x[x >= 10] <- 4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x >= 11] <- 4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] <- 4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
class(x)
getwd
getwd()
list.files()
read.csv(hw1_data)
read.csv(hw1_data.csv)
read.csv("hw1_data.csv")
?print
x <- read.csv("hw1_data.csv")
x
print(x,2)
x
head(x,n=2)
tail(x,n=2)
x[47]
x[47,]
x[,47]
x[47,]
library(sqldf)
install.packages("sqldf")
library(sqldf)
sqldf(select distinct ozone,count(*) from x group by 1)
sqldf('select distinct ozone,count(*) from x group by 1')
sqldf('select average(ozone) from x where ozone != "NA')
sqldf('select average(ozone) from x where ozone != "NA"')
sqldf('select mean(ozone) from x where ozone != "NA"')
sqldf('select avg(ozone) from x where ozone != "NA"')
##Extract the subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90. What is the mean of Solar.R in this subset?
sqldf('select avg(ozone) from x')
View(x)
View(x)
sqldf('select avg(Solar.R) from x where Ozone > 31 and Temp > 90')
sqldf('select avg(solar.r) from x where Ozone > 31 and Temp > 90')
View(x)
class(x)
summary)x
summary(x)
sqldf('select avg(Solar.R) from x where Ozone > 31 and Temp > 90')
sqldf('select avg("Solar.R") from x where Ozone > 31 and Temp > 90')
##
##What is the mean of "Temp" when "Month" is equal to 6?
sqldf('select avg(Temp) from x where Month = 6')
##
##
##What was the maximum ozone value in the month of May (i.e. Month is equal to 5)?
sqldf('select max(Ozone) from x where Month = 5')
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 1
if(x > 5) {
x <- 0
}
x
> x <- 10
> if(x > 5) {
+     x <- 0
+ }
> x
x <- 10
if(x > 5) {
x <- 0
}
x
x <- 1:10
if(x > 5) {
x <- 0
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h()
debug(ls)
ls()
swirl()
library("swirl")
> swirl()
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flag,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lappy(flag_colors,sum)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makevector(2)
makevector()
makeVector(2)
m <- NULL
function(y) {
+         x <<- y
+         m <<- NULL
+     }
function(y) {
x <<- y
m <<- NULL
}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(x=1:5)
swirl()
library("swirl")
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(0:1,100,REPLACE=TRUE,prob = (.3,.7)
sample(0:1,100,REPLACE=TRUE,prob = (0.3,0.7)
sample(c(0:1),100,REPLACE=TRUE,prob = c(0.3,0.7)
sample(c(0:1),100,REPLACE=TRUE,prob = c(0.3,0.7))
sample(c(0,1),100,REPLACE=TRUE,prob = c(0.3,0.7))
sample(c(0,1),100,replace=TRUE,prob = c(0.3,0.7))
flips <- sample(c(0,1),100,replace=TRUE,prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size = 100, prob = 0.7)
flips2 <- rbinom(1,size = 100, prob = 0.7)
flips2 <- rbinom(100,size = 1, prob = 0.7)
flips2
sum(flips2)
?rnomr
?rnorm
rnorm(10)
rnorm(mean=100,sd=25)
rnorm(10,mean=100,sd=25)
pnorm(5,mean=10)
pnois(5, mean=10)
rpois(5, mean=10)
?rpois
rpois(5,lambda=10)
my_pois <- replicate(100,rpois(5,lambda=10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
speed <- plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
?plot
plot(cars, sub = "My Plot Subtitle")
?cars
?plot
plot(cars, col=2)
plot(cars, xlim = c(10, 15))
plot(cars, pch=2)
mtcars
data(mtcars)
play()
ggplot(mtcars)
ggplot2(mtcars)
nxt()
?boxplot
boxplot(mtcars, formula = mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
set.seed(1)
rpois(5, 2)
class(rpois(5, 2))
set.seed(1)
rpois(5, 2)
x <- rpois(5, 2)
x
set.sed(1)
set.seed(1)
x <- rpois(5,2)
x
?rnorm
?pnorm
?set.seed
?rpois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
e
?rbinom
library("swirl")
swirl()
exit()
quit()
swirl()
library("swirl")
swirl()
install_from_swirl("Manipulating Data with dplyr")
swirl()
swirl()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("ggplot2")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
rug(low)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12)
abline(v=12, lwd=2)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
table(pollution$region)
reg -> table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pollution, col="red")
boxplot(pm25~region, col="red")
boxplot(pm25~region, data = pollution, col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region = "east")
east <- subset(pollution,region=="east")
head(east)
hist(east$pm25, col="green")
hist(subset(pollution,region=="west")$pm25, col="green")
plot(pollution)
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2,lty=2)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=12,lty=2)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "west")
plot(west$latitude,west$pm25, main="west")
plot(west$latitude,west$pm25, main="West")
plot(east$latitude,east$pm25, main="East")
?Devices
plot(faithful$eruptions,faithful$waiting)
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
getwd
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,"geyserplot.png")
dev.copy(png,file="geyserplot.png")
dev.off()
getwd
getwd()
swirl()
swirl()
library("swirl")
> swirl()
swirl()
library("swirl")
swirl()
head(airquality)
xyplot(Ozone~Wind, data=airquality)
xyplot(Ozone~Wind, data=airquality, col = "red", pch=8. ,main = "Big Apple Data")
xyplot(Ozone~Wind, data=airquality, col = "red", pch=8,main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data=airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month, data=airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x | f, layout = c(2,1))
v1
v2
myedit("plot1.R")
0
myedit("plot1.R")
0
quit
quit()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
quit()
library("swirl")
swirl()
x1 <- pm1$V5
x1 <- pm1$Sample.Value
quit()
library("swirl")
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,'|',fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1 < 0
sum(negative,na.rm=T)
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.site == 63.2008 )
pm0sub <- subset(cnt0, county.site == 63.2008 )
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.date(as.character(pm0sub$date),"%Y%m%d)
dates0 <- as.Date(as.character(pm0sub$date),"%Y%m%d)
dates0 <- as.Date(as.character(pm0sub$date),"%Y%m%d")
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm10sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(median(x0sub,na.rm=TRUE), lwd=2)
abline(h=median(x0sub,na.rm=TRUE), lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE), lwd=2)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean(Sample.Value),na.rm=TRUE))
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <= data.frame(state=names(mn0),mean=mn0)
d0 <- data.frame(state=names(mn0),mean=mn0)
d1 <- data.frame(state=names(mn1),mean=mn0)
d1 <- data.frame(state=names(mn1),mean=mn1)
mrg <- merge(d0,d1,by="state")
dim(mrg)
head(mrg)
ith(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y, ]
quit()
library(ggplot2)
library(sqldf)
setwd("C:/Users/cam7de/Desktop/Coursera/07172016/RepData_PeerAssessment1")
getwd()
unzip("activity.zip")
import <- read.csv("activity.csv")
import$date <- as.Date(import$date,format = "%Y-%m-%d")
str(import)
